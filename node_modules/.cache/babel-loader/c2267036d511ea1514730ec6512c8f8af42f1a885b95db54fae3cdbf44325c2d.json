{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Color } from './Color.js';\nimport { EventDispatcher } from './EventDispatcher.js';\nimport { FrontSide, NormalBlending, LessEqualDepth, AddEquation, OneMinusSrcAlphaFactor, SrcAlphaFactor, AlwaysStencilFunc, KeepStencilOp } from './constants.js';\nimport * as MathUtils from './MathUtils.js';\nlet _materialId = 0;\nclass Material extends EventDispatcher {\n  constructor() {\n    super();\n    this.isMaterial = true;\n    Object.defineProperty(this, 'id', {\n      value: _materialId++\n    });\n    this.uuid = MathUtils.generateUUID();\n    this.name = '';\n    this.type = 'Material';\n    this.blending = NormalBlending;\n    this.side = FrontSide;\n    this.vertexColors = false;\n    this.opacity = 1;\n    this.transparent = false;\n    this.alphaHash = false;\n    this.blendSrc = SrcAlphaFactor;\n    this.blendDst = OneMinusSrcAlphaFactor;\n    this.blendEquation = AddEquation;\n    this.blendSrcAlpha = null;\n    this.blendDstAlpha = null;\n    this.blendEquationAlpha = null;\n    this.blendColor = new Color(0, 0, 0);\n    this.blendAlpha = 0;\n    this.depthFunc = LessEqualDepth;\n    this.depthTest = true;\n    this.depthWrite = true;\n    this.stencilWriteMask = 0xff;\n    this.stencilFunc = AlwaysStencilFunc;\n    this.stencilRef = 0;\n    this.stencilFuncMask = 0xff;\n    this.stencilFail = KeepStencilOp;\n    this.stencilZFail = KeepStencilOp;\n    this.stencilZPass = KeepStencilOp;\n    this.stencilWrite = false;\n    this.clippingPlanes = null;\n    this.clipIntersection = false;\n    this.clipShadows = false;\n    this.shadowSide = null;\n    this.colorWrite = true;\n    this.precision = null; // override the renderer's default precision for this material\n\n    this.polygonOffset = false;\n    this.polygonOffsetFactor = 0;\n    this.polygonOffsetUnits = 0;\n    this.dithering = false;\n    this.alphaToCoverage = false;\n    this.premultipliedAlpha = false;\n    this.forceSinglePass = false;\n    this.visible = true;\n    this.toneMapped = true;\n    this.userData = {};\n    this.version = 0;\n    this._alphaTest = 0;\n  }\n  get alphaTest() {\n    return this._alphaTest;\n  }\n  set alphaTest(value) {\n    if (this._alphaTest > 0 !== value > 0) {\n      this.version++;\n    }\n    this._alphaTest = value;\n  }\n  onBuild( /* shaderobject, renderer */) {}\n  onBeforeRender( /* renderer, scene, camera, geometry, object, group */) {}\n  onBeforeCompile( /* shaderobject, renderer */) {}\n  customProgramCacheKey() {\n    return this.onBeforeCompile.toString();\n  }\n  setValues(values) {\n    if (values === undefined) return;\n    for (const key in values) {\n      const newValue = values[key];\n      if (newValue === undefined) {\n        console.warn(`THREE.Material: parameter '${key}' has value of undefined.`);\n        continue;\n      }\n      const currentValue = this[key];\n      if (currentValue === undefined) {\n        console.warn(`THREE.Material: '${key}' is not a property of THREE.${this.type}.`);\n        continue;\n      }\n      if (currentValue && currentValue.isColor) {\n        currentValue.set(newValue);\n      } else if (currentValue && currentValue.isVector3 && newValue && newValue.isVector3) {\n        currentValue.copy(newValue);\n      } else {\n        this[key] = newValue;\n      }\n    }\n  }\n  toJSON(meta) {\n    const isRootObject = meta === undefined || typeof meta === 'string';\n    if (isRootObject) {\n      meta = {\n        textures: {},\n        images: {}\n      };\n    }\n    const data = {\n      metadata: {\n        version: 4.6,\n        type: 'Material',\n        generator: 'Material.toJSON'\n      }\n    };\n\n    // standard Material serialization\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n    if (this.color && this.color.isColor) data.color = this.color.getHex();\n    if (this.roughness !== undefined) data.roughness = this.roughness;\n    if (this.metalness !== undefined) data.metalness = this.metalness;\n    if (this.sheen !== undefined) data.sheen = this.sheen;\n    if (this.sheenColor && this.sheenColor.isColor) data.sheenColor = this.sheenColor.getHex();\n    if (this.sheenRoughness !== undefined) data.sheenRoughness = this.sheenRoughness;\n    if (this.emissive && this.emissive.isColor) data.emissive = this.emissive.getHex();\n    if (this.emissiveIntensity && this.emissiveIntensity !== 1) data.emissiveIntensity = this.emissiveIntensity;\n    if (this.specular && this.specular.isColor) data.specular = this.specular.getHex();\n    if (this.specularIntensity !== undefined) data.specularIntensity = this.specularIntensity;\n    if (this.specularColor && this.specularColor.isColor) data.specularColor = this.specularColor.getHex();\n    if (this.shininess !== undefined) data.shininess = this.shininess;\n    if (this.clearcoat !== undefined) data.clearcoat = this.clearcoat;\n    if (this.clearcoatRoughness !== undefined) data.clearcoatRoughness = this.clearcoatRoughness;\n    if (this.clearcoatMap && this.clearcoatMap.isTexture) {\n      data.clearcoatMap = this.clearcoatMap.toJSON(meta).uuid;\n    }\n    if (this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture) {\n      data.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(meta).uuid;\n    }\n    if (this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture) {\n      data.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(meta).uuid;\n      data.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n    }\n    if (this.iridescence !== undefined) data.iridescence = this.iridescence;\n    if (this.iridescenceIOR !== undefined) data.iridescenceIOR = this.iridescenceIOR;\n    if (this.iridescenceThicknessRange !== undefined) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n    if (this.iridescenceMap && this.iridescenceMap.isTexture) {\n      data.iridescenceMap = this.iridescenceMap.toJSON(meta).uuid;\n    }\n    if (this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture) {\n      data.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON(meta).uuid;\n    }\n    if (this.anisotropy !== undefined) data.anisotropy = this.anisotropy;\n    if (this.anisotropyRotation !== undefined) data.anisotropyRotation = this.anisotropyRotation;\n    if (this.anisotropyMap && this.anisotropyMap.isTexture) {\n      data.anisotropyMap = this.anisotropyMap.toJSON(meta).uuid;\n    }\n    if (this.map && this.map.isTexture) data.map = this.map.toJSON(meta).uuid;\n    if (this.matcap && this.matcap.isTexture) data.matcap = this.matcap.toJSON(meta).uuid;\n    if (this.alphaMap && this.alphaMap.isTexture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n    if (this.lightMap && this.lightMap.isTexture) {\n      data.lightMap = this.lightMap.toJSON(meta).uuid;\n      data.lightMapIntensity = this.lightMapIntensity;\n    }\n    if (this.aoMap && this.aoMap.isTexture) {\n      data.aoMap = this.aoMap.toJSON(meta).uuid;\n      data.aoMapIntensity = this.aoMapIntensity;\n    }\n    if (this.bumpMap && this.bumpMap.isTexture) {\n      data.bumpMap = this.bumpMap.toJSON(meta).uuid;\n      data.bumpScale = this.bumpScale;\n    }\n    if (this.normalMap && this.normalMap.isTexture) {\n      data.normalMap = this.normalMap.toJSON(meta).uuid;\n      data.normalMapType = this.normalMapType;\n      data.normalScale = this.normalScale.toArray();\n    }\n    if (this.displacementMap && this.displacementMap.isTexture) {\n      data.displacementMap = this.displacementMap.toJSON(meta).uuid;\n      data.displacementScale = this.displacementScale;\n      data.displacementBias = this.displacementBias;\n    }\n    if (this.roughnessMap && this.roughnessMap.isTexture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n    if (this.metalnessMap && this.metalnessMap.isTexture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n    if (this.emissiveMap && this.emissiveMap.isTexture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n    if (this.specularMap && this.specularMap.isTexture) data.specularMap = this.specularMap.toJSON(meta).uuid;\n    if (this.specularIntensityMap && this.specularIntensityMap.isTexture) data.specularIntensityMap = this.specularIntensityMap.toJSON(meta).uuid;\n    if (this.specularColorMap && this.specularColorMap.isTexture) data.specularColorMap = this.specularColorMap.toJSON(meta).uuid;\n    if (this.envMap && this.envMap.isTexture) {\n      data.envMap = this.envMap.toJSON(meta).uuid;\n      if (this.combine !== undefined) data.combine = this.combine;\n    }\n    if (this.envMapIntensity !== undefined) data.envMapIntensity = this.envMapIntensity;\n    if (this.reflectivity !== undefined) data.reflectivity = this.reflectivity;\n    if (this.refractionRatio !== undefined) data.refractionRatio = this.refractionRatio;\n    if (this.gradientMap && this.gradientMap.isTexture) {\n      data.gradientMap = this.gradientMap.toJSON(meta).uuid;\n    }\n    if (this.transmission !== undefined) data.transmission = this.transmission;\n    if (this.transmissionMap && this.transmissionMap.isTexture) data.transmissionMap = this.transmissionMap.toJSON(meta).uuid;\n    if (this.thickness !== undefined) data.thickness = this.thickness;\n    if (this.thicknessMap && this.thicknessMap.isTexture) data.thicknessMap = this.thicknessMap.toJSON(meta).uuid;\n    if (this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity) data.attenuationDistance = this.attenuationDistance;\n    if (this.attenuationColor !== undefined) data.attenuationColor = this.attenuationColor.getHex();\n    if (this.size !== undefined) data.size = this.size;\n    if (this.shadowSide !== null) data.shadowSide = this.shadowSide;\n    if (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n    if (this.blending !== NormalBlending) data.blending = this.blending;\n    if (this.side !== FrontSide) data.side = this.side;\n    if (this.vertexColors === true) data.vertexColors = true;\n    if (this.opacity < 1) data.opacity = this.opacity;\n    if (this.transparent === true) data.transparent = true;\n    if (this.blendSrc !== SrcAlphaFactor) data.blendSrc = this.blendSrc;\n    if (this.blendDst !== OneMinusSrcAlphaFactor) data.blendDst = this.blendDst;\n    if (this.blendEquation !== AddEquation) data.blendEquation = this.blendEquation;\n    if (this.blendSrcAlpha !== null) data.blendSrcAlpha = this.blendSrcAlpha;\n    if (this.blendDstAlpha !== null) data.blendDstAlpha = this.blendDstAlpha;\n    if (this.blendEquationAlpha !== null) data.blendEquationAlpha = this.blendEquationAlpha;\n    if (this.blendColor && this.blendColor.isColor) data.blendColor = this.blendColor.getHex();\n    if (this.blendAlpha !== 0) data.blendAlpha = this.blendAlpha;\n    if (this.depthFunc !== LessEqualDepth) data.depthFunc = this.depthFunc;\n    if (this.depthTest === false) data.depthTest = this.depthTest;\n    if (this.depthWrite === false) data.depthWrite = this.depthWrite;\n    if (this.colorWrite === false) data.colorWrite = this.colorWrite;\n    if (this.stencilWriteMask !== 0xff) data.stencilWriteMask = this.stencilWriteMask;\n    if (this.stencilFunc !== AlwaysStencilFunc) data.stencilFunc = this.stencilFunc;\n    if (this.stencilRef !== 0) data.stencilRef = this.stencilRef;\n    if (this.stencilFuncMask !== 0xff) data.stencilFuncMask = this.stencilFuncMask;\n    if (this.stencilFail !== KeepStencilOp) data.stencilFail = this.stencilFail;\n    if (this.stencilZFail !== KeepStencilOp) data.stencilZFail = this.stencilZFail;\n    if (this.stencilZPass !== KeepStencilOp) data.stencilZPass = this.stencilZPass;\n    if (this.stencilWrite === true) data.stencilWrite = this.stencilWrite;\n\n    // rotation (SpriteMaterial)\n    if (this.rotation !== undefined && this.rotation !== 0) data.rotation = this.rotation;\n    if (this.polygonOffset === true) data.polygonOffset = true;\n    if (this.polygonOffsetFactor !== 0) data.polygonOffsetFactor = this.polygonOffsetFactor;\n    if (this.polygonOffsetUnits !== 0) data.polygonOffsetUnits = this.polygonOffsetUnits;\n    if (this.linewidth !== undefined && this.linewidth !== 1) data.linewidth = this.linewidth;\n    if (this.dashSize !== undefined) data.dashSize = this.dashSize;\n    if (this.gapSize !== undefined) data.gapSize = this.gapSize;\n    if (this.scale !== undefined) data.scale = this.scale;\n    if (this.dithering === true) data.dithering = true;\n    if (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n    if (this.alphaHash === true) data.alphaHash = true;\n    if (this.alphaToCoverage === true) data.alphaToCoverage = true;\n    if (this.premultipliedAlpha === true) data.premultipliedAlpha = true;\n    if (this.forceSinglePass === true) data.forceSinglePass = true;\n    if (this.wireframe === true) data.wireframe = true;\n    if (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\n    if (this.wireframeLinecap !== 'round') data.wireframeLinecap = this.wireframeLinecap;\n    if (this.wireframeLinejoin !== 'round') data.wireframeLinejoin = this.wireframeLinejoin;\n    if (this.flatShading === true) data.flatShading = true;\n    if (this.visible === false) data.visible = false;\n    if (this.toneMapped === false) data.toneMapped = false;\n    if (this.fog === false) data.fog = false;\n    if (Object.keys(this.userData).length > 0) data.userData = this.userData;\n\n    // TODO: Copied from Object3D.toJSON\n\n    function extractFromCache(cache) {\n      const values = [];\n      for (const key in cache) {\n        const data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n      return values;\n    }\n    if (isRootObject) {\n      const textures = extractFromCache(meta.textures);\n      const images = extractFromCache(meta.images);\n      if (textures.length > 0) data.textures = textures;\n      if (images.length > 0) data.images = images;\n    }\n    return data;\n  }\n  clone() {\n    return new this.constructor().copy(this);\n  }\n  copy(source) {\n    this.name = source.name;\n    this.blending = source.blending;\n    this.side = source.side;\n    this.vertexColors = source.vertexColors;\n    this.opacity = source.opacity;\n    this.transparent = source.transparent;\n    this.blendSrc = source.blendSrc;\n    this.blendDst = source.blendDst;\n    this.blendEquation = source.blendEquation;\n    this.blendSrcAlpha = source.blendSrcAlpha;\n    this.blendDstAlpha = source.blendDstAlpha;\n    this.blendEquationAlpha = source.blendEquationAlpha;\n    this.blendColor.copy(source.blendColor);\n    this.blendAlpha = source.blendAlpha;\n    this.depthFunc = source.depthFunc;\n    this.depthTest = source.depthTest;\n    this.depthWrite = source.depthWrite;\n    this.stencilWriteMask = source.stencilWriteMask;\n    this.stencilFunc = source.stencilFunc;\n    this.stencilRef = source.stencilRef;\n    this.stencilFuncMask = source.stencilFuncMask;\n    this.stencilFail = source.stencilFail;\n    this.stencilZFail = source.stencilZFail;\n    this.stencilZPass = source.stencilZPass;\n    this.stencilWrite = source.stencilWrite;\n    const srcPlanes = source.clippingPlanes;\n    let dstPlanes = null;\n    if (srcPlanes !== null) {\n      const n = srcPlanes.length;\n      dstPlanes = new Array(n);\n      for (let i = 0; i !== n; ++i) {\n        dstPlanes[i] = srcPlanes[i].clone();\n      }\n    }\n    this.clippingPlanes = dstPlanes;\n    this.clipIntersection = source.clipIntersection;\n    this.clipShadows = source.clipShadows;\n    this.shadowSide = source.shadowSide;\n    this.colorWrite = source.colorWrite;\n    this.precision = source.precision;\n    this.polygonOffset = source.polygonOffset;\n    this.polygonOffsetFactor = source.polygonOffsetFactor;\n    this.polygonOffsetUnits = source.polygonOffsetUnits;\n    this.dithering = source.dithering;\n    this.alphaTest = source.alphaTest;\n    this.alphaHash = source.alphaHash;\n    this.alphaToCoverage = source.alphaToCoverage;\n    this.premultipliedAlpha = source.premultipliedAlpha;\n    this.forceSinglePass = source.forceSinglePass;\n    this.visible = source.visible;\n    this.toneMapped = source.toneMapped;\n    this.userData = JSON.parse(JSON.stringify(source.userData));\n    return this;\n  }\n  dispose() {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  }\n}\nexport { Material };","map":{"version":3,"names":["Color","EventDispatcher","FrontSide","NormalBlending","LessEqualDepth","AddEquation","OneMinusSrcAlphaFactor","SrcAlphaFactor","AlwaysStencilFunc","KeepStencilOp","MathUtils","_materialId","Material","constructor","isMaterial","Object","defineProperty","value","uuid","generateUUID","name","type","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","visible","toneMapped","userData","version","_alphaTest","alphaTest","onBuild","onBeforeRender","onBeforeCompile","customProgramCacheKey","toString","setValues","values","undefined","key","newValue","console","warn","currentValue","isColor","set","isVector3","copy","toJSON","meta","isRootObject","textures","images","data","metadata","generator","color","getHex","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","isTexture","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","toArray","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropy","anisotropyRotation","anisotropyMap","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","Infinity","attenuationColor","size","sizeAttenuation","rotation","linewidth","dashSize","gapSize","scale","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","keys","length","extractFromCache","cache","push","clone","source","srcPlanes","dstPlanes","n","Array","i","JSON","parse","stringify","dispose","dispatchEvent","needsUpdate"],"sources":["D:/Course/CG/Final/cgfinal/src/Shader/Material.js"],"sourcesContent":["import { Color } from './Color.js';\nimport { EventDispatcher } from './EventDispatcher.js';\nimport { FrontSide, NormalBlending, LessEqualDepth, AddEquation, OneMinusSrcAlphaFactor, SrcAlphaFactor, AlwaysStencilFunc, KeepStencilOp } from './constants.js';\nimport * as MathUtils from './MathUtils.js';\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nexport { Material };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}