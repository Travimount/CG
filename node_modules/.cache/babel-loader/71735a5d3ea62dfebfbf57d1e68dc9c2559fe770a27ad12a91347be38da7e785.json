{"ast":null,"code":"import * as THREE from 'three';\nimport Stats from 'three/addons/libs/stats.module.js';\nimport { GUI } from 'three/addons/libs/lil-gui.module.min.js';\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\nexport default {\n  name: 'HelloWorld',\n  data() {\n    return {\n      // 在这里声明您的数据属性\n      camera: null,\n      scene: null,\n      renderer: null,\n      bulbLight: null,\n      bulbMat: null,\n      hemiLight: null,\n      stats: null,\n      controls: null,\n      floorMat: null,\n      cubeMat: null,\n      ballMat: null,\n      previousShadowMap: false,\n      params: {\n        shadows: true,\n        exposure: 0.68,\n        bulbPower: '800 lm (60W)',\n        // 初始值应与 GUI 设置匹配\n        hemiIrradiance: '0.0001 lx (Moonless Night)' // 同上\n      },\n      bulbLuminousPowers: {},\n      hemiLuminousIrradiances: {}\n    };\n  },\n  mounted() {\n    this.initThreeJS();\n    this.animate();\n  },\n  methods: {\n    initThreeJS() {\n      const container = this.$refs.container;\n\n      // Stats\n      this.stats = new Stats();\n      container.appendChild(this.stats.dom);\n\n      // Camera\n      this.camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 100);\n      this.camera.position.set(-4, 2, 4);\n\n      // Scene\n      this.scene = new THREE.Scene();\n\n      // Lights and materials setup\n      this.setupLightsAndMaterials();\n\n      // Renderer\n      this.renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      this.renderer.shadowMap.enabled = true;\n      this.renderer.toneMapping = THREE.ReinhardToneMapping;\n      this.renderer.setPixelRatio(window.devicePixelRatio);\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n      container.appendChild(this.renderer.domElement);\n\n      // Controls\n      this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n      this.controls.minDistance = 1;\n      this.controls.maxDistance = 20;\n\n      // Window resize listener\n      window.addEventListener('resize', this.onWindowResize);\n\n      // GUI\n      this.setupGUI();\n    },\n    setupLightsAndMaterials() {\n      // 灯泡几何体和灯光\n      const bulbGeometry = new THREE.SphereGeometry(0.02, 16, 8);\n      this.bulbLight = new THREE.PointLight(0xffee88, 1, 100, 2);\n      this.bulbMat = new THREE.MeshStandardMaterial({\n        emissive: 0xffffee,\n        emissiveIntensity: 1,\n        color: 0x000000\n      });\n      this.bulbLight.add(new THREE.Mesh(bulbGeometry, this.bulbMat));\n      this.bulbLight.position.set(0, 2, 0);\n      this.bulbLight.castShadow = true;\n      this.scene.add(this.bulbLight);\n\n      // 半球光源\n      this.hemiLight = new THREE.HemisphereLight(0xddeeff, 0x0f0e0d, 0.02);\n      this.scene.add(this.hemiLight);\n\n      // 地板材质\n      this.floorMat = new THREE.MeshStandardMaterial({\n        roughness: 0.8,\n        color: 0xffffff,\n        metalness: 0.2,\n        bumpScale: 1\n      });\n      const textureLoader = new THREE.TextureLoader();\n      textureLoader.load('img/hardwood2_diffuse.jpg', map => {\n        map.wrapS = THREE.RepeatWrapping;\n        map.wrapT = THREE.RepeatWrapping;\n        map.anisotropy = 4;\n        map.repeat.set(10, 24);\n        map.colorSpace = THREE.SRGBColorSpace;\n        this.floorMat.map = map;\n        this.floorMat.needsUpdate = true;\n      });\n      textureLoader.load('img/hardwood2_bump.jpg', map => {\n        map.wrapS = THREE.RepeatWrapping;\n        map.wrapT = THREE.RepeatWrapping;\n        map.anisotropy = 4;\n        map.repeat.set(10, 24);\n        this.floorMat.bumpMap = map;\n        this.floorMat.needsUpdate = true;\n      });\n      textureLoader.load('img/hardwood2_roughness.jpg', map => {\n        map.wrapS = THREE.RepeatWrapping;\n        map.wrapT = THREE.RepeatWrapping;\n        map.anisotropy = 4;\n        map.repeat.set(10, 24);\n        this.floorMat.roughnessMap = map;\n        this.floorMat.needsUpdate = true;\n      });\n\n      // 创建地板\n      const floorGeometry = new THREE.PlaneGeometry(20, 20);\n      const floorMesh = new THREE.Mesh(floorGeometry, this.floorMat);\n      floorMesh.receiveShadow = true;\n      floorMesh.rotation.x = -Math.PI / 2.0;\n      this.scene.add(floorMesh);\n\n      // 方块材质\n      this.cubeMat = new THREE.MeshStandardMaterial({\n        roughness: 0.7,\n        color: 0xffffff,\n        bumpScale: 0.002,\n        metalness: 0.2\n      });\n      textureLoader.load('img/brick_diffuse.jpg', map => {\n        map.wrapS = THREE.RepeatWrapping;\n        map.wrapT = THREE.RepeatWrapping;\n        map.anisotropy = 4;\n        map.repeat.set(1, 1);\n        map.colorSpace = THREE.SRGBColorSpace;\n        this.cubeMat.map = map;\n        this.cubeMat.needsUpdate = true;\n      });\n      textureLoader.load('img/brick_bump.jpg', map => {\n        map.wrapS = THREE.RepeatWrapping;\n        map.wrapT = THREE.RepeatWrapping;\n        map.anisotropy = 4;\n        map.repeat.set(1, 1);\n        this.cubeMat.bumpMap = map;\n        this.cubeMat.needsUpdate = true;\n      });\n\n      // 创建方块\n      const boxGeometry = new THREE.BoxGeometry(0.5, 0.5, 0.5);\n      const boxMesh = new THREE.Mesh(boxGeometry, this.cubeMat);\n      boxMesh.position.set(-0.5, 0.25, -1);\n      boxMesh.castShadow = true;\n      this.scene.add(boxMesh);\n\n      // 球体材质\n      this.ballMat = new THREE.MeshStandardMaterial({\n        color: 0xffffff,\n        roughness: 0.5,\n        metalness: 1.0\n      });\n      textureLoader.load('img/earth_atmos_2048.jpg', map => {\n        map.anisotropy = 4;\n        map.colorSpace = THREE.SRGBColorSpace;\n        this.ballMat.map = map;\n        this.ballMat.needsUpdate = true;\n      });\n      textureLoader.load('img/earth_specular_2048.jpg', map => {\n        map.anisotropy = 4;\n        map.colorSpace = THREE.SRGBColorSpace;\n        this.ballMat.metalnessMap = map;\n        this.ballMat.needsUpdate = true;\n      });\n\n      // 创建球体\n      const ballGeometry = new THREE.SphereGeometry(0.25, 32, 32);\n      const ballMesh = new THREE.Mesh(ballGeometry, this.ballMat);\n      ballMesh.position.set(1, 0.25, 1);\n      ballMesh.castShadow = true;\n      this.scene.add(ballMesh);\n    },\n    setupGUI() {\n      // GUI 参数\n      const params = {\n        shadows: true,\n        exposure: 0.68,\n        bulbPower: Object.keys(this.bulbLuminousPowers)[4],\n        hemiIrradiance: Object.keys(this.hemiLuminousIrradiances)[0]\n      };\n\n      // 灯泡流明值\n      this.bulbLuminousPowers = {\n        '110000 lm (1000W)': 110000,\n        '3500 lm (300W)': 3500,\n        '1700 lm (100W)': 1700,\n        '800 lm (60W)': 800,\n        '400 lm (40W)': 400,\n        '180 lm (25W)': 180,\n        '20 lm (4W)': 20,\n        'Off': 0\n      };\n\n      // 半球辐照度\n      this.hemiLuminousIrradiances = {\n        '0.0001 lx (Moonless Night)': 0.0001,\n        '0.002 lx (Night Airglow)': 0.002,\n        '0.5 lx (Full Moon)': 0.5,\n        '3.4 lx (City Twilight)': 3.4,\n        '50 lx (Living Room)': 50,\n        '100 lx (Very Overcast)': 100,\n        '350 lx (Office Room)': 350,\n        '400 lx (Sunrise/Sunset)': 400,\n        '1000 lx (Overcast)': 1000,\n        '18000 lx (Daylight)': 18000,\n        '50000 lx (Direct Sun)': 50000\n      };\n\n      // GUI 设置\n      const gui = new GUI();\n      gui.add(params, 'hemiIrradiance', Object.keys(this.hemiLuminousIrradiances)).onChange(value => {\n        this.hemiLight.intensity = this.hemiLuminousIrradiances[value];\n      });\n      gui.add(params, 'bulbPower', Object.keys(this.bulbLuminousPowers)).onChange(value => {\n        this.bulbLight.power = this.bulbLuminousPowers[value];\n        this.bulbMat.emissiveIntensity = this.bulbLight.intensity / Math.pow(0.02, 2.0); // 从强度转换到表面辐照度\n      });\n      gui.add(params, 'exposure', 0, 1).onChange(value => {\n        this.renderer.toneMappingExposure = Math.pow(value, 5.0); // 允许非常明亮的场景\n      });\n      gui.add(params, 'shadows').onChange(value => {\n        this.renderer.shadowMap.enabled = value;\n        this.bulbLight.castShadow = value;\n        this.updateMaterials();\n      });\n\n      // 更新材质以反应阴影变化\n      this.updateMaterials = () => {\n        this.ballMat.needsUpdate = true;\n        this.cubeMat.needsUpdate = true;\n        this.floorMat.needsUpdate = true;\n      };\n    },\n    animate() {\n      // Animation loop\n      requestAnimationFrame(this.animate);\n      this.render();\n    },\n    render() {\n      this.renderer.toneMappingExposure = Math.pow(this.params.exposure, 5.0); // 允许非常明亮的场景\n      this.renderer.shadowMap.enabled = this.params.shadows;\n      this.bulbLight.castShadow = this.params.shadows;\n      if (this.params.shadows !== this.previousShadowMap) {\n        // 更新材质以反映阴影的变化\n        this.ballMat.needsUpdate = true;\n        this.cubeMat.needsUpdate = true;\n        this.floorMat.needsUpdate = true;\n        this.previousShadowMap = this.params.shadows;\n      }\n\n      // 更新灯泡的功率和半球光源的强度\n      this.bulbLight.power = this.bulbLuminousPowers[this.params.bulbPower];\n      this.bulbMat.emissiveIntensity = this.bulbLight.intensity / Math.pow(0.02, 2.0); // 从强度转换到表面辐照度\n      this.hemiLight.intensity = this.hemiLuminousIrradiances[this.params.hemiIrradiance];\n      const time = Date.now() * 0.0005;\n      this.bulbLight.position.y = Math.cos(time) * 0.75 + 1.25;\n      this.renderer.render(this.scene, this.camera);\n      this.stats.update();\n    },\n    onWindowResize() {\n      this.camera.aspect = window.innerWidth / window.innerHeight;\n      this.camera.updateProjectionMatrix();\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n  }\n};","map":{"version":3,"names":["THREE","Stats","GUI","OrbitControls","name","data","camera","scene","renderer","bulbLight","bulbMat","hemiLight","stats","controls","floorMat","cubeMat","ballMat","previousShadowMap","params","shadows","exposure","bulbPower","hemiIrradiance","bulbLuminousPowers","hemiLuminousIrradiances","mounted","initThreeJS","animate","methods","container","$refs","appendChild","dom","PerspectiveCamera","window","innerWidth","innerHeight","position","set","Scene","setupLightsAndMaterials","WebGLRenderer","antialias","shadowMap","enabled","toneMapping","ReinhardToneMapping","setPixelRatio","devicePixelRatio","setSize","domElement","minDistance","maxDistance","addEventListener","onWindowResize","setupGUI","bulbGeometry","SphereGeometry","PointLight","MeshStandardMaterial","emissive","emissiveIntensity","color","add","Mesh","castShadow","HemisphereLight","roughness","metalness","bumpScale","textureLoader","TextureLoader","load","map","wrapS","RepeatWrapping","wrapT","anisotropy","repeat","colorSpace","SRGBColorSpace","needsUpdate","bumpMap","roughnessMap","floorGeometry","PlaneGeometry","floorMesh","receiveShadow","rotation","x","Math","PI","boxGeometry","BoxGeometry","boxMesh","metalnessMap","ballGeometry","ballMesh","Object","keys","gui","onChange","value","intensity","power","pow","toneMappingExposure","updateMaterials","requestAnimationFrame","render","time","Date","now","y","cos","update","aspect","updateProjectionMatrix"],"sources":["D:\\Course\\CG\\Final\\cgfinal\\src\\components\\HelloWorld.vue"],"sourcesContent":["\n<template>\n  <div>\n    <div ref=\"container\"></div>\n  </div>\n</template>\n\n<script>\n\nimport * as THREE from 'three';\nimport Stats from 'three/addons/libs/stats.module.js';\nimport { GUI } from 'three/addons/libs/lil-gui.module.min.js';\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\n\nexport default {\n  name: 'HelloWorld',\n  data() {\n    return {\n      // 在这里声明您的数据属性\n      camera: null,\n      scene: null,\n      renderer: null,\n      bulbLight: null,\n      bulbMat: null,\n      hemiLight: null,\n      stats: null,\n      controls: null,\n      floorMat: null,\n      cubeMat: null,\n      ballMat: null,\n      previousShadowMap: false,\n      params: {\n        shadows: true,\n        exposure: 0.68,\n        bulbPower: '800 lm (60W)', // 初始值应与 GUI 设置匹配\n        hemiIrradiance: '0.0001 lx (Moonless Night)' // 同上\n      },\n      bulbLuminousPowers: {\n      },\n      hemiLuminousIrradiances: {\n      }\n    };\n  },\n  mounted() {\n    this.initThreeJS();\n    this.animate();\n  },\n\n  methods: {\n    initThreeJS() {\n      const container = this.$refs.container;\n\n      // Stats\n      this.stats = new Stats();\n      container.appendChild(this.stats.dom);\n\n      // Camera\n      this.camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 100);\n      this.camera.position.set(-4, 2, 4);\n\n      // Scene\n      this.scene = new THREE.Scene();\n\n      // Lights and materials setup\n      this.setupLightsAndMaterials();\n\n      // Renderer\n      this.renderer = new THREE.WebGLRenderer({ antialias: true });\n      this.renderer.shadowMap.enabled = true;\n      this.renderer.toneMapping = THREE.ReinhardToneMapping;\n      this.renderer.setPixelRatio(window.devicePixelRatio);\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n      container.appendChild(this.renderer.domElement);\n\n      // Controls\n      this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n      this.controls.minDistance = 1;\n      this.controls.maxDistance = 20;\n\n      // Window resize listener\n      window.addEventListener('resize', this.onWindowResize);\n\n      // GUI\n      this.setupGUI();\n    },\n\n    setupLightsAndMaterials() {\n      // 灯泡几何体和灯光\n      const bulbGeometry = new THREE.SphereGeometry(0.02, 16, 8);\n      this.bulbLight = new THREE.PointLight(0xffee88, 1, 100, 2);\n      this.bulbMat = new THREE.MeshStandardMaterial({\n        emissive: 0xffffee,\n        emissiveIntensity: 1,\n        color: 0x000000\n      });\n      this.bulbLight.add(new THREE.Mesh(bulbGeometry, this.bulbMat));\n      this.bulbLight.position.set(0, 2, 0);\n      this.bulbLight.castShadow = true;\n      this.scene.add(this.bulbLight);\n\n      // 半球光源\n      this.hemiLight = new THREE.HemisphereLight(0xddeeff, 0x0f0e0d, 0.02);\n      this.scene.add(this.hemiLight);\n\n      // 地板材质\n      this.floorMat = new THREE.MeshStandardMaterial({\n        roughness: 0.8,\n        color: 0xffffff,\n        metalness: 0.2,\n        bumpScale: 1\n      });\n      const textureLoader = new THREE.TextureLoader();\n      textureLoader.load('img/hardwood2_diffuse.jpg', (map) => {\n        map.wrapS = THREE.RepeatWrapping;\n        map.wrapT = THREE.RepeatWrapping;\n        map.anisotropy = 4;\n        map.repeat.set(10, 24);\n        map.colorSpace = THREE.SRGBColorSpace;\n        this.floorMat.map = map;\n        this.floorMat.needsUpdate = true;\n      });\n      textureLoader.load('img/hardwood2_bump.jpg', (map) => {\n        map.wrapS = THREE.RepeatWrapping;\n        map.wrapT = THREE.RepeatWrapping;\n        map.anisotropy = 4;\n        map.repeat.set(10, 24);\n        this.floorMat.bumpMap = map;\n        this.floorMat.needsUpdate = true;\n      });\n      textureLoader.load('img/hardwood2_roughness.jpg', (map) => {\n        map.wrapS = THREE.RepeatWrapping;\n        map.wrapT = THREE.RepeatWrapping;\n        map.anisotropy = 4;\n        map.repeat.set(10, 24);\n        this.floorMat.roughnessMap = map;\n        this.floorMat.needsUpdate = true;\n      });\n\n      // 创建地板\n      const floorGeometry = new THREE.PlaneGeometry(20, 20);\n      const floorMesh = new THREE.Mesh(floorGeometry, this.floorMat);\n      floorMesh.receiveShadow = true;\n      floorMesh.rotation.x = -Math.PI / 2.0;\n      this.scene.add(floorMesh);\n\n      // 方块材质\n      this.cubeMat = new THREE.MeshStandardMaterial({\n        roughness: 0.7,\n        color: 0xffffff,\n        bumpScale: 0.002,\n        metalness: 0.2\n      });\n      textureLoader.load('img/brick_diffuse.jpg', (map) => {\n        map.wrapS = THREE.RepeatWrapping;\n        map.wrapT = THREE.RepeatWrapping;\n        map.anisotropy = 4;\n        map.repeat.set(1, 1);\n        map.colorSpace = THREE.SRGBColorSpace;\n        this.cubeMat.map = map;\n        this.cubeMat.needsUpdate = true;\n      });\n      textureLoader.load('img/brick_bump.jpg', (map) => {\n        map.wrapS = THREE.RepeatWrapping;\n        map.wrapT = THREE.RepeatWrapping;\n        map.anisotropy = 4;\n        map.repeat.set(1, 1);\n        this.cubeMat.bumpMap = map;\n        this.cubeMat.needsUpdate = true;\n      });\n\n      // 创建方块\n      const boxGeometry = new THREE.BoxGeometry(0.5, 0.5, 0.5);\n      const boxMesh = new THREE.Mesh(boxGeometry, this.cubeMat);\n      boxMesh.position.set(-0.5, 0.25, -1);\n      boxMesh.castShadow = true;\n      this.scene.add(boxMesh);\n\n      // 球体材质\n      this.ballMat = new THREE.MeshStandardMaterial({\n        color: 0xffffff,\n        roughness: 0.5,\n        metalness: 1.0\n      });\n      textureLoader.load('img/earth_atmos_2048.jpg', (map) => {\n        map.anisotropy = 4;\n        map.colorSpace = THREE.SRGBColorSpace;\n        this.ballMat.map = map;\n        this.ballMat.needsUpdate = true;\n      });\n      textureLoader.load('img/earth_specular_2048.jpg', (map) => {\n        map.anisotropy = 4;\n        map.colorSpace = THREE.SRGBColorSpace;\n        this.ballMat.metalnessMap = map;\n        this.ballMat.needsUpdate = true;\n      });\n\n      // 创建球体\n      const ballGeometry = new THREE.SphereGeometry(0.25, 32, 32);\n      const ballMesh = new THREE.Mesh(ballGeometry, this.ballMat);\n      ballMesh.position.set(1, 0.25, 1);\n      ballMesh.castShadow = true;\n      this.scene.add(ballMesh);\n    },\n\n    setupGUI() {\n      // GUI 参数\n      const params = {\n        shadows: true,\n        exposure: 0.68,\n        bulbPower: Object.keys(this.bulbLuminousPowers)[4],\n        hemiIrradiance: Object.keys(this.hemiLuminousIrradiances)[0]\n      };\n\n      // 灯泡流明值\n      this.bulbLuminousPowers = {\n        '110000 lm (1000W)': 110000,\n        '3500 lm (300W)': 3500,\n        '1700 lm (100W)': 1700,\n        '800 lm (60W)': 800,\n        '400 lm (40W)': 400,\n        '180 lm (25W)': 180,\n        '20 lm (4W)': 20,\n        'Off': 0\n      };\n\n      // 半球辐照度\n      this.hemiLuminousIrradiances = {\n        '0.0001 lx (Moonless Night)': 0.0001,\n        '0.002 lx (Night Airglow)': 0.002,\n        '0.5 lx (Full Moon)': 0.5,\n        '3.4 lx (City Twilight)': 3.4,\n        '50 lx (Living Room)': 50,\n        '100 lx (Very Overcast)': 100,\n        '350 lx (Office Room)': 350,\n        '400 lx (Sunrise/Sunset)': 400,\n        '1000 lx (Overcast)': 1000,\n        '18000 lx (Daylight)': 18000,\n        '50000 lx (Direct Sun)': 50000\n      };\n\n      // GUI 设置\n      const gui = new GUI();\n\n      gui.add(params, 'hemiIrradiance', Object.keys(this.hemiLuminousIrradiances)).onChange(value => {\n        this.hemiLight.intensity = this.hemiLuminousIrradiances[value];\n      });\n      gui.add(params, 'bulbPower', Object.keys(this.bulbLuminousPowers)).onChange(value => {\n        this.bulbLight.power = this.bulbLuminousPowers[value];\n        this.bulbMat.emissiveIntensity = this.bulbLight.intensity / Math.pow(0.02, 2.0); // 从强度转换到表面辐照度\n      });\n      gui.add(params, 'exposure', 0, 1).onChange(value => {\n        this.renderer.toneMappingExposure = Math.pow(value, 5.0); // 允许非常明亮的场景\n      });\n      gui.add(params, 'shadows').onChange(value => {\n        this.renderer.shadowMap.enabled = value;\n        this.bulbLight.castShadow = value;\n        this.updateMaterials();\n      });\n\n      // 更新材质以反应阴影变化\n      this.updateMaterials = () => {\n        this.ballMat.needsUpdate = true;\n        this.cubeMat.needsUpdate = true;\n        this.floorMat.needsUpdate = true;\n      };\n    },\n\n    animate() {\n      // Animation loop\n      requestAnimationFrame(this.animate);\n      this.render();\n    },\n\n    render() {\n      this.renderer.toneMappingExposure = Math.pow(this.params.exposure, 5.0); // 允许非常明亮的场景\n      this.renderer.shadowMap.enabled = this.params.shadows;\n      this.bulbLight.castShadow = this.params.shadows;\n\n      if (this.params.shadows !== this.previousShadowMap) {\n        // 更新材质以反映阴影的变化\n        this.ballMat.needsUpdate = true;\n        this.cubeMat.needsUpdate = true;\n        this.floorMat.needsUpdate = true;\n        this.previousShadowMap = this.params.shadows;\n      }\n\n      // 更新灯泡的功率和半球光源的强度\n      this.bulbLight.power = this.bulbLuminousPowers[this.params.bulbPower];\n      this.bulbMat.emissiveIntensity = this.bulbLight.intensity / Math.pow(0.02, 2.0); // 从强度转换到表面辐照度\n      this.hemiLight.intensity = this.hemiLuminousIrradiances[this.params.hemiIrradiance];\n\n      const time = Date.now() * 0.0005;\n      this.bulbLight.position.y = Math.cos(time) * 0.75 + 1.25;\n\n      this.renderer.render(this.scene, this.camera);\n\n      this.stats.update();\n    },\n\n    onWindowResize() {\n      this.camera.aspect = window.innerWidth / window.innerHeight;\n      this.camera.updateProjectionMatrix();\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n    },\n  }\n};\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}