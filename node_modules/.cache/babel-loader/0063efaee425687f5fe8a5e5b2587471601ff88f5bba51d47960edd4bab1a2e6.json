{"ast":null,"code":"import { clamp, euclideanModulo, lerp } from './MathUtils.js';\nimport { ColorManagement, SRGBToLinear, LinearToSRGB } from './ColorManagement.js';\nimport { SRGBColorSpace } from './constants.js';\nconst _colorKeywords = {\n  'aliceblue': 0xF0F8FF,\n  'antiquewhite': 0xFAEBD7,\n  'aqua': 0x00FFFF,\n  'aquamarine': 0x7FFFD4,\n  'azure': 0xF0FFFF,\n  'beige': 0xF5F5DC,\n  'bisque': 0xFFE4C4,\n  'black': 0x000000,\n  'blanchedalmond': 0xFFEBCD,\n  'blue': 0x0000FF,\n  'blueviolet': 0x8A2BE2,\n  'brown': 0xA52A2A,\n  'burlywood': 0xDEB887,\n  'cadetblue': 0x5F9EA0,\n  'chartreuse': 0x7FFF00,\n  'chocolate': 0xD2691E,\n  'coral': 0xFF7F50,\n  'cornflowerblue': 0x6495ED,\n  'cornsilk': 0xFFF8DC,\n  'crimson': 0xDC143C,\n  'cyan': 0x00FFFF,\n  'darkblue': 0x00008B,\n  'darkcyan': 0x008B8B,\n  'darkgoldenrod': 0xB8860B,\n  'darkgray': 0xA9A9A9,\n  'darkgreen': 0x006400,\n  'darkgrey': 0xA9A9A9,\n  'darkkhaki': 0xBDB76B,\n  'darkmagenta': 0x8B008B,\n  'darkolivegreen': 0x556B2F,\n  'darkorange': 0xFF8C00,\n  'darkorchid': 0x9932CC,\n  'darkred': 0x8B0000,\n  'darksalmon': 0xE9967A,\n  'darkseagreen': 0x8FBC8F,\n  'darkslateblue': 0x483D8B,\n  'darkslategray': 0x2F4F4F,\n  'darkslategrey': 0x2F4F4F,\n  'darkturquoise': 0x00CED1,\n  'darkviolet': 0x9400D3,\n  'deeppink': 0xFF1493,\n  'deepskyblue': 0x00BFFF,\n  'dimgray': 0x696969,\n  'dimgrey': 0x696969,\n  'dodgerblue': 0x1E90FF,\n  'firebrick': 0xB22222,\n  'floralwhite': 0xFFFAF0,\n  'forestgreen': 0x228B22,\n  'fuchsia': 0xFF00FF,\n  'gainsboro': 0xDCDCDC,\n  'ghostwhite': 0xF8F8FF,\n  'gold': 0xFFD700,\n  'goldenrod': 0xDAA520,\n  'gray': 0x808080,\n  'green': 0x008000,\n  'greenyellow': 0xADFF2F,\n  'grey': 0x808080,\n  'honeydew': 0xF0FFF0,\n  'hotpink': 0xFF69B4,\n  'indianred': 0xCD5C5C,\n  'indigo': 0x4B0082,\n  'ivory': 0xFFFFF0,\n  'khaki': 0xF0E68C,\n  'lavender': 0xE6E6FA,\n  'lavenderblush': 0xFFF0F5,\n  'lawngreen': 0x7CFC00,\n  'lemonchiffon': 0xFFFACD,\n  'lightblue': 0xADD8E6,\n  'lightcoral': 0xF08080,\n  'lightcyan': 0xE0FFFF,\n  'lightgoldenrodyellow': 0xFAFAD2,\n  'lightgray': 0xD3D3D3,\n  'lightgreen': 0x90EE90,\n  'lightgrey': 0xD3D3D3,\n  'lightpink': 0xFFB6C1,\n  'lightsalmon': 0xFFA07A,\n  'lightseagreen': 0x20B2AA,\n  'lightskyblue': 0x87CEFA,\n  'lightslategray': 0x778899,\n  'lightslategrey': 0x778899,\n  'lightsteelblue': 0xB0C4DE,\n  'lightyellow': 0xFFFFE0,\n  'lime': 0x00FF00,\n  'limegreen': 0x32CD32,\n  'linen': 0xFAF0E6,\n  'magenta': 0xFF00FF,\n  'maroon': 0x800000,\n  'mediumaquamarine': 0x66CDAA,\n  'mediumblue': 0x0000CD,\n  'mediumorchid': 0xBA55D3,\n  'mediumpurple': 0x9370DB,\n  'mediumseagreen': 0x3CB371,\n  'mediumslateblue': 0x7B68EE,\n  'mediumspringgreen': 0x00FA9A,\n  'mediumturquoise': 0x48D1CC,\n  'mediumvioletred': 0xC71585,\n  'midnightblue': 0x191970,\n  'mintcream': 0xF5FFFA,\n  'mistyrose': 0xFFE4E1,\n  'moccasin': 0xFFE4B5,\n  'navajowhite': 0xFFDEAD,\n  'navy': 0x000080,\n  'oldlace': 0xFDF5E6,\n  'olive': 0x808000,\n  'olivedrab': 0x6B8E23,\n  'orange': 0xFFA500,\n  'orangered': 0xFF4500,\n  'orchid': 0xDA70D6,\n  'palegoldenrod': 0xEEE8AA,\n  'palegreen': 0x98FB98,\n  'paleturquoise': 0xAFEEEE,\n  'palevioletred': 0xDB7093,\n  'papayawhip': 0xFFEFD5,\n  'peachpuff': 0xFFDAB9,\n  'peru': 0xCD853F,\n  'pink': 0xFFC0CB,\n  'plum': 0xDDA0DD,\n  'powderblue': 0xB0E0E6,\n  'purple': 0x800080,\n  'rebeccapurple': 0x663399,\n  'red': 0xFF0000,\n  'rosybrown': 0xBC8F8F,\n  'royalblue': 0x4169E1,\n  'saddlebrown': 0x8B4513,\n  'salmon': 0xFA8072,\n  'sandybrown': 0xF4A460,\n  'seagreen': 0x2E8B57,\n  'seashell': 0xFFF5EE,\n  'sienna': 0xA0522D,\n  'silver': 0xC0C0C0,\n  'skyblue': 0x87CEEB,\n  'slateblue': 0x6A5ACD,\n  'slategray': 0x708090,\n  'slategrey': 0x708090,\n  'snow': 0xFFFAFA,\n  'springgreen': 0x00FF7F,\n  'steelblue': 0x4682B4,\n  'tan': 0xD2B48C,\n  'teal': 0x008080,\n  'thistle': 0xD8BFD8,\n  'tomato': 0xFF6347,\n  'turquoise': 0x40E0D0,\n  'violet': 0xEE82EE,\n  'wheat': 0xF5DEB3,\n  'white': 0xFFFFFF,\n  'whitesmoke': 0xF5F5F5,\n  'yellow': 0xFFFF00,\n  'yellowgreen': 0x9ACD32\n};\nconst _hslA = {\n  h: 0,\n  s: 0,\n  l: 0\n};\nconst _hslB = {\n  h: 0,\n  s: 0,\n  l: 0\n};\nfunction hue2rgb(p, q, t) {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  if (t < 1 / 6) return p + (q - p) * 6 * t;\n  if (t < 1 / 2) return q;\n  if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n  return p;\n}\nclass Color {\n  constructor(r, g, b) {\n    this.isColor = true;\n    this.r = 1;\n    this.g = 1;\n    this.b = 1;\n    return this.set(r, g, b);\n  }\n  set(r, g, b) {\n    if (g === undefined && b === undefined) {\n      // r is THREE.Color, hex or string\n\n      const value = r;\n      if (value && value.isColor) {\n        this.copy(value);\n      } else if (typeof value === 'number') {\n        this.setHex(value);\n      } else if (typeof value === 'string') {\n        this.setStyle(value);\n      }\n    } else {\n      this.setRGB(r, g, b);\n    }\n    return this;\n  }\n  setScalar(scalar) {\n    this.r = scalar;\n    this.g = scalar;\n    this.b = scalar;\n    return this;\n  }\n  setHex(hex, colorSpace = SRGBColorSpace) {\n    hex = Math.floor(hex);\n    this.r = (hex >> 16 & 255) / 255;\n    this.g = (hex >> 8 & 255) / 255;\n    this.b = (hex & 255) / 255;\n    ColorManagement.toWorkingColorSpace(this, colorSpace);\n    return this;\n  }\n  setRGB(r, g, b, colorSpace = ColorManagement.workingColorSpace) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    ColorManagement.toWorkingColorSpace(this, colorSpace);\n    return this;\n  }\n  setHSL(h, s, l, colorSpace = ColorManagement.workingColorSpace) {\n    // h,s,l ranges are in 0.0 - 1.0\n    h = euclideanModulo(h, 1);\n    s = clamp(s, 0, 1);\n    l = clamp(l, 0, 1);\n    if (s === 0) {\n      this.r = this.g = this.b = l;\n    } else {\n      const p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n      const q = 2 * l - p;\n      this.r = hue2rgb(q, p, h + 1 / 3);\n      this.g = hue2rgb(q, p, h);\n      this.b = hue2rgb(q, p, h - 1 / 3);\n    }\n    ColorManagement.toWorkingColorSpace(this, colorSpace);\n    return this;\n  }\n  setStyle(style, colorSpace = SRGBColorSpace) {\n    function handleAlpha(string) {\n      if (string === undefined) return;\n      if (parseFloat(string) < 1) {\n        console.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n      }\n    }\n    let m;\n    if (m = /^(\\w+)\\(([^\\)]*)\\)/.exec(style)) {\n      // rgb / hsl\n\n      let color;\n      const name = m[1];\n      const components = m[2];\n      switch (name) {\n        case 'rgb':\n        case 'rgba':\n          if (color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n            // rgb(255,0,0) rgba(255,0,0,0.5)\n\n            handleAlpha(color[4]);\n            return this.setRGB(Math.min(255, parseInt(color[1], 10)) / 255, Math.min(255, parseInt(color[2], 10)) / 255, Math.min(255, parseInt(color[3], 10)) / 255, colorSpace);\n          }\n          if (color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n            // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n            handleAlpha(color[4]);\n            return this.setRGB(Math.min(100, parseInt(color[1], 10)) / 100, Math.min(100, parseInt(color[2], 10)) / 100, Math.min(100, parseInt(color[3], 10)) / 100, colorSpace);\n          }\n          break;\n        case 'hsl':\n        case 'hsla':\n          if (color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n            // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n            handleAlpha(color[4]);\n            return this.setHSL(parseFloat(color[1]) / 360, parseFloat(color[2]) / 100, parseFloat(color[3]) / 100, colorSpace);\n          }\n          break;\n        default:\n          console.warn('THREE.Color: Unknown color model ' + style);\n      }\n    } else if (m = /^\\#([A-Fa-f\\d]+)$/.exec(style)) {\n      // hex color\n\n      const hex = m[1];\n      const size = hex.length;\n      if (size === 3) {\n        // #ff0\n        return this.setRGB(parseInt(hex.charAt(0), 16) / 15, parseInt(hex.charAt(1), 16) / 15, parseInt(hex.charAt(2), 16) / 15, colorSpace);\n      } else if (size === 6) {\n        // #ff0000\n        return this.setHex(parseInt(hex, 16), colorSpace);\n      } else {\n        console.warn('THREE.Color: Invalid hex color ' + style);\n      }\n    } else if (style && style.length > 0) {\n      return this.setColorName(style, colorSpace);\n    }\n    return this;\n  }\n  setColorName(style, colorSpace = SRGBColorSpace) {\n    // color keywords\n    const hex = _colorKeywords[style.toLowerCase()];\n    if (hex !== undefined) {\n      // red\n      this.setHex(hex, colorSpace);\n    } else {\n      // unknown color\n      console.warn('THREE.Color: Unknown color ' + style);\n    }\n    return this;\n  }\n  clone() {\n    return new this.constructor(this.r, this.g, this.b);\n  }\n  copy(color) {\n    this.r = color.r;\n    this.g = color.g;\n    this.b = color.b;\n    return this;\n  }\n  copySRGBToLinear(color) {\n    this.r = SRGBToLinear(color.r);\n    this.g = SRGBToLinear(color.g);\n    this.b = SRGBToLinear(color.b);\n    return this;\n  }\n  copyLinearToSRGB(color) {\n    this.r = LinearToSRGB(color.r);\n    this.g = LinearToSRGB(color.g);\n    this.b = LinearToSRGB(color.b);\n    return this;\n  }\n  convertSRGBToLinear() {\n    this.copySRGBToLinear(this);\n    return this;\n  }\n  convertLinearToSRGB() {\n    this.copyLinearToSRGB(this);\n    return this;\n  }\n  getHex(colorSpace = SRGBColorSpace) {\n    ColorManagement.fromWorkingColorSpace(_color.copy(this), colorSpace);\n    return Math.round(clamp(_color.r * 255, 0, 255)) * 65536 + Math.round(clamp(_color.g * 255, 0, 255)) * 256 + Math.round(clamp(_color.b * 255, 0, 255));\n  }\n  getHexString(colorSpace = SRGBColorSpace) {\n    return ('000000' + this.getHex(colorSpace).toString(16)).slice(-6);\n  }\n  getHSL(target, colorSpace = ColorManagement.workingColorSpace) {\n    // h,s,l ranges are in 0.0 - 1.0\n\n    ColorManagement.fromWorkingColorSpace(_color.copy(this), colorSpace);\n    const r = _color.r,\n      g = _color.g,\n      b = _color.b;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let hue, saturation;\n    const lightness = (min + max) / 2.0;\n    if (min === max) {\n      hue = 0;\n      saturation = 0;\n    } else {\n      const delta = max - min;\n      saturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n      switch (max) {\n        case r:\n          hue = (g - b) / delta + (g < b ? 6 : 0);\n          break;\n        case g:\n          hue = (b - r) / delta + 2;\n          break;\n        case b:\n          hue = (r - g) / delta + 4;\n          break;\n      }\n      hue /= 6;\n    }\n    target.h = hue;\n    target.s = saturation;\n    target.l = lightness;\n    return target;\n  }\n  getRGB(target, colorSpace = ColorManagement.workingColorSpace) {\n    ColorManagement.fromWorkingColorSpace(_color.copy(this), colorSpace);\n    target.r = _color.r;\n    target.g = _color.g;\n    target.b = _color.b;\n    return target;\n  }\n  getStyle(colorSpace = SRGBColorSpace) {\n    ColorManagement.fromWorkingColorSpace(_color.copy(this), colorSpace);\n    const r = _color.r,\n      g = _color.g,\n      b = _color.b;\n    if (colorSpace !== SRGBColorSpace) {\n      // Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n      return `color(${colorSpace} ${r.toFixed(3)} ${g.toFixed(3)} ${b.toFixed(3)})`;\n    }\n    return `rgb(${Math.round(r * 255)},${Math.round(g * 255)},${Math.round(b * 255)})`;\n  }\n  offsetHSL(h, s, l) {\n    this.getHSL(_hslA);\n    return this.setHSL(_hslA.h + h, _hslA.s + s, _hslA.l + l);\n  }\n  add(color) {\n    this.r += color.r;\n    this.g += color.g;\n    this.b += color.b;\n    return this;\n  }\n  addColors(color1, color2) {\n    this.r = color1.r + color2.r;\n    this.g = color1.g + color2.g;\n    this.b = color1.b + color2.b;\n    return this;\n  }\n  addScalar(s) {\n    this.r += s;\n    this.g += s;\n    this.b += s;\n    return this;\n  }\n  sub(color) {\n    this.r = Math.max(0, this.r - color.r);\n    this.g = Math.max(0, this.g - color.g);\n    this.b = Math.max(0, this.b - color.b);\n    return this;\n  }\n  multiply(color) {\n    this.r *= color.r;\n    this.g *= color.g;\n    this.b *= color.b;\n    return this;\n  }\n  multiplyScalar(s) {\n    this.r *= s;\n    this.g *= s;\n    this.b *= s;\n    return this;\n  }\n  lerp(color, alpha) {\n    this.r += (color.r - this.r) * alpha;\n    this.g += (color.g - this.g) * alpha;\n    this.b += (color.b - this.b) * alpha;\n    return this;\n  }\n  lerpColors(color1, color2, alpha) {\n    this.r = color1.r + (color2.r - color1.r) * alpha;\n    this.g = color1.g + (color2.g - color1.g) * alpha;\n    this.b = color1.b + (color2.b - color1.b) * alpha;\n    return this;\n  }\n  lerpHSL(color, alpha) {\n    this.getHSL(_hslA);\n    color.getHSL(_hslB);\n    const h = lerp(_hslA.h, _hslB.h, alpha);\n    const s = lerp(_hslA.s, _hslB.s, alpha);\n    const l = lerp(_hslA.l, _hslB.l, alpha);\n    this.setHSL(h, s, l);\n    return this;\n  }\n  setFromVector3(v) {\n    this.r = v.x;\n    this.g = v.y;\n    this.b = v.z;\n    return this;\n  }\n  applyMatrix3(m) {\n    const r = this.r,\n      g = this.g,\n      b = this.b;\n    const e = m.elements;\n    this.r = e[0] * r + e[3] * g + e[6] * b;\n    this.g = e[1] * r + e[4] * g + e[7] * b;\n    this.b = e[2] * r + e[5] * g + e[8] * b;\n    return this;\n  }\n  equals(c) {\n    return c.r === this.r && c.g === this.g && c.b === this.b;\n  }\n  fromArray(array, offset = 0) {\n    this.r = array[offset];\n    this.g = array[offset + 1];\n    this.b = array[offset + 2];\n    return this;\n  }\n  toArray(array = [], offset = 0) {\n    array[offset] = this.r;\n    array[offset + 1] = this.g;\n    array[offset + 2] = this.b;\n    return array;\n  }\n  fromBufferAttribute(attribute, index) {\n    this.r = attribute.getX(index);\n    this.g = attribute.getY(index);\n    this.b = attribute.getZ(index);\n    return this;\n  }\n  toJSON() {\n    return this.getHex();\n  }\n  *[Symbol.iterator]() {\n    yield this.r;\n    yield this.g;\n    yield this.b;\n  }\n}\nconst _color = /*@__PURE__*/new Color();\nColor.NAMES = _colorKeywords;\nexport { Color };","map":{"version":3,"names":["clamp","euclideanModulo","lerp","ColorManagement","SRGBToLinear","LinearToSRGB","SRGBColorSpace","_colorKeywords","_hslA","h","s","l","_hslB","hue2rgb","p","q","t","Color","constructor","r","g","b","isColor","set","undefined","value","copy","setHex","setStyle","setRGB","setScalar","scalar","hex","colorSpace","Math","floor","toWorkingColorSpace","workingColorSpace","setHSL","style","handleAlpha","string","parseFloat","console","warn","m","exec","color","name","components","min","parseInt","size","length","charAt","setColorName","toLowerCase","clone","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","fromWorkingColorSpace","_color","round","getHexString","toString","slice","getHSL","target","max","hue","saturation","lightness","delta","getRGB","getStyle","toFixed","offsetHSL","add","addColors","color1","color2","addScalar","sub","multiply","multiplyScalar","alpha","lerpColors","lerpHSL","setFromVector3","v","x","y","z","applyMatrix3","e","elements","equals","c","fromArray","array","offset","toArray","fromBufferAttribute","attribute","index","getX","getY","getZ","toJSON","Symbol","iterator","NAMES"],"sources":["D:/Course/CG/Final/cgfinal/src/Shader/Color.js"],"sourcesContent":["import { clamp, euclideanModulo, lerp } from './MathUtils.js';\nimport { ColorManagement, SRGBToLinear, LinearToSRGB } from './ColorManagement.js';\nimport { SRGBColorSpace } from './constants.js';\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nexport { Color };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}