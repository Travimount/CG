{"ast":null,"code":"import * as THREE from 'three';\nimport Stats from 'three/addons/libs/stats.module.js';\nimport { GUI } from 'three/addons/libs/lil-gui.module.min.js';\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\nexport default {\n  name: 'HelloWorld',\n  mounted() {\n    this.initThreeJS();\n    this.animate();\n  },\n  methods: {\n    initThreeJS() {\n      const container = this.$refs.container;\n\n      // Stats\n      this.stats = new Stats();\n      container.appendChild(this.stats.dom);\n\n      // Camera\n      this.camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 100);\n      this.camera.position.set(-4, 2, 4);\n\n      // Scene\n      this.scene = new THREE.Scene();\n\n      // Lights and materials setup\n      this.setupLightsAndMaterials();\n\n      // Renderer\n      this.renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      this.renderer.shadowMap.enabled = true;\n      this.renderer.toneMapping = THREE.ReinhardToneMapping;\n      this.renderer.setPixelRatio(window.devicePixelRatio);\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n      container.appendChild(this.renderer.domElement);\n\n      // Controls\n      this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n      this.controls.minDistance = 1;\n      this.controls.maxDistance = 20;\n\n      // Window resize listener\n      window.addEventListener('resize', this.onWindowResize);\n\n      // GUI\n      this.setupGUI();\n    },\n    setupLightsAndMaterials() {\n      // 灯泡几何体和灯光\n      const bulbGeometry = new THREE.SphereGeometry(0.02, 16, 8);\n      this.bulbLight = new THREE.PointLight(0xffee88, 1, 100, 2);\n      this.bulbMat = new THREE.MeshStandardMaterial({\n        emissive: 0xffffee,\n        emissiveIntensity: 1,\n        color: 0x000000\n      });\n      this.bulbLight.add(new THREE.Mesh(bulbGeometry, this.bulbMat));\n      this.bulbLight.position.set(0, 2, 0);\n      this.bulbLight.castShadow = true;\n      this.scene.add(this.bulbLight);\n\n      // 半球光源\n      this.hemiLight = new THREE.HemisphereLight(0xddeeff, 0x0f0e0d, 0.02);\n      this.scene.add(this.hemiLight);\n\n      // 地板材质\n      this.floorMat = new THREE.MeshStandardMaterial({\n        roughness: 0.8,\n        color: 0xffffff,\n        metalness: 0.2,\n        bumpScale: 1\n      });\n      const textureLoader = new THREE.TextureLoader();\n      textureLoader.load('textures/hardwood2_diffuse.jpg', map => {\n        map.wrapS = THREE.RepeatWrapping;\n        map.wrapT = THREE.RepeatWrapping;\n        map.anisotropy = 4;\n        map.repeat.set(10, 24);\n        map.colorSpace = THREE.SRGBColorSpace;\n        this.floorMat.map = map;\n        this.floorMat.needsUpdate = true;\n      });\n      textureLoader.load('textures/hardwood2_bump.jpg', map => {\n        map.wrapS = THREE.RepeatWrapping;\n        map.wrapT = THREE.RepeatWrapping;\n        map.anisotropy = 4;\n        map.repeat.set(10, 24);\n        this.floorMat.bumpMap = map;\n        this.floorMat.needsUpdate = true;\n      });\n      textureLoader.load('textures/hardwood2_roughness.jpg', map => {\n        map.wrapS = THREE.RepeatWrapping;\n        map.wrapT = THREE.RepeatWrapping;\n        map.anisotropy = 4;\n        map.repeat.set(10, 24);\n        this.floorMat.roughnessMap = map;\n        this.floorMat.needsUpdate = true;\n      });\n\n      // 创建地板\n      const floorGeometry = new THREE.PlaneGeometry(20, 20);\n      const floorMesh = new THREE.Mesh(floorGeometry, this.floorMat);\n      floorMesh.receiveShadow = true;\n      floorMesh.rotation.x = -Math.PI / 2.0;\n      this.scene.add(floorMesh);\n\n      // 方块材质\n      this.cubeMat = new THREE.MeshStandardMaterial({\n        roughness: 0.7,\n        color: 0xffffff,\n        bumpScale: 0.002,\n        metalness: 0.2\n      });\n      textureLoader.load('textures/brick_diffuse.jpg', map => {\n        map.wrapS = THREE.RepeatWrapping;\n        map.wrapT = THREE.RepeatWrapping;\n        map.anisotropy = 4;\n        map.repeat.set(1, 1);\n        map.colorSpace = THREE.SRGBColorSpace;\n        this.cubeMat.map = map;\n        this.cubeMat.needsUpdate = true;\n      });\n      textureLoader.load('textures/brick_bump.jpg', map => {\n        map.wrapS = THREE.RepeatWrapping;\n        map.wrapT = THREE.RepeatWrapping;\n        map.anisotropy = 4;\n        map.repeat.set(1, 1);\n        this.cubeMat.bumpMap = map;\n        this.cubeMat.needsUpdate = true;\n      });\n\n      // 创建方块\n      const boxGeometry = new THREE.BoxGeometry(0.5, 0.5, 0.5);\n      const boxMesh = new THREE.Mesh(boxGeometry, this.cubeMat);\n      boxMesh.position.set(-0.5, 0.25, -1);\n      boxMesh.castShadow = true;\n      this.scene.add(boxMesh);\n\n      // 球体材质\n      this.ballMat = new THREE.MeshStandardMaterial({\n        color: 0xffffff,\n        roughness: 0.5,\n        metalness: 1.0\n      });\n      textureLoader.load('textures/planets/earth_atmos_2048.jpg', map => {\n        map.anisotropy = 4;\n        map.colorSpace = THREE.SRGBColorSpace;\n        this.ballMat.map = map;\n        this.ballMat.needsUpdate = true;\n      });\n      textureLoader.load('textures/planets/earth_specular_2048.jpg', map => {\n        map.anisotropy = 4;\n        map.colorSpace = THREE.SRGBColorSpace;\n        this.ballMat.metalnessMap = map;\n        this.ballMat.needsUpdate = true;\n      });\n\n      // 创建球体\n      const ballGeometry = new THREE.SphereGeometry(0.25, 32, 32);\n      const ballMesh = new THREE.Mesh(ballGeometry, this.ballMat);\n      ballMesh.position.set(1, 0.25, 1);\n      ballMesh.castShadow = true;\n      this.scene.add(ballMesh);\n    },\n    setupGUI() {\n      // GUI 参数\n      const params = {\n        shadows: true,\n        exposure: 0.68,\n        bulbPower: Object.keys(this.bulbLuminousPowers)[4],\n        hemiIrradiance: Object.keys(this.hemiLuminousIrradiances)[0]\n      };\n\n      // 灯泡流明值\n      this.bulbLuminousPowers = {\n        '110000 lm (1000W)': 110000,\n        '3500 lm (300W)': 3500,\n        '1700 lm (100W)': 1700,\n        '800 lm (60W)': 800,\n        '400 lm (40W)': 400,\n        '180 lm (25W)': 180,\n        '20 lm (4W)': 20,\n        'Off': 0\n      };\n\n      // 半球辐照度\n      this.hemiLuminousIrradiances = {\n        '0.0001 lx (Moonless Night)': 0.0001,\n        '0.002 lx (Night Airglow)': 0.002,\n        '0.5 lx (Full Moon)': 0.5,\n        '3.4 lx (City Twilight)': 3.4,\n        '50 lx (Living Room)': 50,\n        '100 lx (Very Overcast)': 100,\n        '350 lx (Office Room)': 350,\n        '400 lx (Sunrise/Sunset)': 400,\n        '1000 lx (Overcast)': 1000,\n        '18000 lx (Daylight)': 18000,\n        '50000 lx (Direct Sun)': 50000\n      };\n\n      // GUI 设置\n      const gui = new GUI();\n      gui.add(params, 'hemiIrradiance', Object.keys(this.hemiLuminousIrradiances)).onChange(value => {\n        this.hemiLight.intensity = this.hemiLuminousIrradiances[value];\n      });\n      gui.add(params, 'bulbPower', Object.keys(this.bulbLuminousPowers)).onChange(value => {\n        this.bulbLight.power = this.bulbLuminousPowers[value];\n        this.bulbMat.emissiveIntensity = this.bulbLight.intensity / Math.pow(0.02, 2.0); // 从强度转换到表面辐照度\n      });\n      gui.add(params, 'exposure', 0, 1).onChange(value => {\n        this.renderer.toneMappingExposure = Math.pow(value, 5.0); // 允许非常明亮的场景\n      });\n      gui.add(params, 'shadows').onChange(value => {\n        this.renderer.shadowMap.enabled = value;\n        this.bulbLight.castShadow = value;\n        this.updateMaterials();\n      });\n\n      // 更新材质以反应阴影变化\n      this.updateMaterials = () => {\n        this.ballMat.needsUpdate = true;\n        this.cubeMat.needsUpdate = true;\n        this.floorMat.needsUpdate = true;\n      };\n    },\n    animate() {\n      // Animation loop\n      requestAnimationFrame(this.animate);\n      this.render();\n    },\n    render() {\n      this.renderer.toneMappingExposure = Math.pow(this.params.exposure, 5.0); // 允许非常明亮的场景\n      this.renderer.shadowMap.enabled = this.params.shadows;\n      this.bulbLight.castShadow = this.params.shadows;\n      if (this.params.shadows !== this.previousShadowMap) {\n        // 更新材质以反映阴影的变化\n        this.ballMat.needsUpdate = true;\n        this.cubeMat.needsUpdate = true;\n        this.floorMat.needsUpdate = true;\n        this.previousShadowMap = this.params.shadows;\n      }\n\n      // 更新灯泡的功率和半球光源的强度\n      this.bulbLight.power = this.bulbLuminousPowers[this.params.bulbPower];\n      this.bulbMat.emissiveIntensity = this.bulbLight.intensity / Math.pow(0.02, 2.0); // 从强度转换到表面辐照度\n      this.hemiLight.intensity = this.hemiLuminousIrradiances[this.params.hemiIrradiance];\n      const time = Date.now() * 0.0005;\n      this.bulbLight.position.y = Math.cos(time) * 0.75 + 1.25;\n      this.renderer.render(this.scene, this.camera);\n      this.stats.update();\n    },\n    onWindowResize() {\n      this.camera.aspect = window.innerWidth / window.innerHeight;\n      this.camera.updateProjectionMatrix();\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n  }\n};","map":{"version":3,"names":["THREE","Stats","GUI","OrbitControls","name","mounted","initThreeJS","animate","methods","container","$refs","stats","appendChild","dom","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","scene","Scene","setupLightsAndMaterials","renderer","WebGLRenderer","antialias","shadowMap","enabled","toneMapping","ReinhardToneMapping","setPixelRatio","devicePixelRatio","setSize","domElement","controls","minDistance","maxDistance","addEventListener","onWindowResize","setupGUI","bulbGeometry","SphereGeometry","bulbLight","PointLight","bulbMat","MeshStandardMaterial","emissive","emissiveIntensity","color","add","Mesh","castShadow","hemiLight","HemisphereLight","floorMat","roughness","metalness","bumpScale","textureLoader","TextureLoader","load","map","wrapS","RepeatWrapping","wrapT","anisotropy","repeat","colorSpace","SRGBColorSpace","needsUpdate","bumpMap","roughnessMap","floorGeometry","PlaneGeometry","floorMesh","receiveShadow","rotation","x","Math","PI","cubeMat","boxGeometry","BoxGeometry","boxMesh","ballMat","metalnessMap","ballGeometry","ballMesh","params","shadows","exposure","bulbPower","Object","keys","bulbLuminousPowers","hemiIrradiance","hemiLuminousIrradiances","gui","onChange","value","intensity","power","pow","toneMappingExposure","updateMaterials","requestAnimationFrame","render","previousShadowMap","time","Date","now","y","cos","update","aspect","updateProjectionMatrix"],"sources":["D:\\Course\\CG\\Final\\cgfinal\\src\\components\\HelloWorld.vue"],"sourcesContent":["\n<template>\n  <div>\n    <div ref=\"container\"></div>\n  </div>\n</template>\n\n<script>\n\nimport * as THREE from 'three';\nimport Stats from 'three/addons/libs/stats.module.js';\nimport { GUI } from 'three/addons/libs/lil-gui.module.min.js';\nimport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\n\nexport default {\n  name: 'HelloWorld',\n\n  mounted() {\n    this.initThreeJS();\n    this.animate();\n  },\n\n  methods: {\n    initThreeJS() {\n      const container = this.$refs.container;\n\n      // Stats\n      this.stats = new Stats();\n      container.appendChild(this.stats.dom);\n\n      // Camera\n      this.camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 100);\n      this.camera.position.set(-4, 2, 4);\n\n      // Scene\n      this.scene = new THREE.Scene();\n\n      // Lights and materials setup\n      this.setupLightsAndMaterials();\n\n      // Renderer\n      this.renderer = new THREE.WebGLRenderer({ antialias: true });\n      this.renderer.shadowMap.enabled = true;\n      this.renderer.toneMapping = THREE.ReinhardToneMapping;\n      this.renderer.setPixelRatio(window.devicePixelRatio);\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n      container.appendChild(this.renderer.domElement);\n\n      // Controls\n      this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n      this.controls.minDistance = 1;\n      this.controls.maxDistance = 20;\n\n      // Window resize listener\n      window.addEventListener('resize', this.onWindowResize);\n\n      // GUI\n      this.setupGUI();\n    },\n\n    setupLightsAndMaterials() {\n      // 灯泡几何体和灯光\n      const bulbGeometry = new THREE.SphereGeometry(0.02, 16, 8);\n      this.bulbLight = new THREE.PointLight(0xffee88, 1, 100, 2);\n      this.bulbMat = new THREE.MeshStandardMaterial({\n        emissive: 0xffffee,\n        emissiveIntensity: 1,\n        color: 0x000000\n      });\n      this.bulbLight.add(new THREE.Mesh(bulbGeometry, this.bulbMat));\n      this.bulbLight.position.set(0, 2, 0);\n      this.bulbLight.castShadow = true;\n      this.scene.add(this.bulbLight);\n\n      // 半球光源\n      this.hemiLight = new THREE.HemisphereLight(0xddeeff, 0x0f0e0d, 0.02);\n      this.scene.add(this.hemiLight);\n\n      // 地板材质\n      this.floorMat = new THREE.MeshStandardMaterial({\n        roughness: 0.8,\n        color: 0xffffff,\n        metalness: 0.2,\n        bumpScale: 1\n      });\n      const textureLoader = new THREE.TextureLoader();\n      textureLoader.load('textures/hardwood2_diffuse.jpg', (map) => {\n        map.wrapS = THREE.RepeatWrapping;\n        map.wrapT = THREE.RepeatWrapping;\n        map.anisotropy = 4;\n        map.repeat.set(10, 24);\n        map.colorSpace = THREE.SRGBColorSpace;\n        this.floorMat.map = map;\n        this.floorMat.needsUpdate = true;\n      });\n      textureLoader.load('textures/hardwood2_bump.jpg', (map) => {\n        map.wrapS = THREE.RepeatWrapping;\n        map.wrapT = THREE.RepeatWrapping;\n        map.anisotropy = 4;\n        map.repeat.set(10, 24);\n        this.floorMat.bumpMap = map;\n        this.floorMat.needsUpdate = true;\n      });\n      textureLoader.load('textures/hardwood2_roughness.jpg', (map) => {\n        map.wrapS = THREE.RepeatWrapping;\n        map.wrapT = THREE.RepeatWrapping;\n        map.anisotropy = 4;\n        map.repeat.set(10, 24);\n        this.floorMat.roughnessMap = map;\n        this.floorMat.needsUpdate = true;\n      });\n\n      // 创建地板\n      const floorGeometry = new THREE.PlaneGeometry(20, 20);\n      const floorMesh = new THREE.Mesh(floorGeometry, this.floorMat);\n      floorMesh.receiveShadow = true;\n      floorMesh.rotation.x = -Math.PI / 2.0;\n      this.scene.add(floorMesh);\n\n      // 方块材质\n      this.cubeMat = new THREE.MeshStandardMaterial({\n        roughness: 0.7,\n        color: 0xffffff,\n        bumpScale: 0.002,\n        metalness: 0.2\n      });\n      textureLoader.load('textures/brick_diffuse.jpg', (map) => {\n        map.wrapS = THREE.RepeatWrapping;\n        map.wrapT = THREE.RepeatWrapping;\n        map.anisotropy = 4;\n        map.repeat.set(1, 1);\n        map.colorSpace = THREE.SRGBColorSpace;\n        this.cubeMat.map = map;\n        this.cubeMat.needsUpdate = true;\n      });\n      textureLoader.load('textures/brick_bump.jpg', (map) => {\n        map.wrapS = THREE.RepeatWrapping;\n        map.wrapT = THREE.RepeatWrapping;\n        map.anisotropy = 4;\n        map.repeat.set(1, 1);\n        this.cubeMat.bumpMap = map;\n        this.cubeMat.needsUpdate = true;\n      });\n\n      // 创建方块\n      const boxGeometry = new THREE.BoxGeometry(0.5, 0.5, 0.5);\n      const boxMesh = new THREE.Mesh(boxGeometry, this.cubeMat);\n      boxMesh.position.set(-0.5, 0.25, -1);\n      boxMesh.castShadow = true;\n      this.scene.add(boxMesh);\n\n      // 球体材质\n      this.ballMat = new THREE.MeshStandardMaterial({\n        color: 0xffffff,\n        roughness: 0.5,\n        metalness: 1.0\n      });\n      textureLoader.load('textures/planets/earth_atmos_2048.jpg', (map) => {\n        map.anisotropy = 4;\n        map.colorSpace = THREE.SRGBColorSpace;\n        this.ballMat.map = map;\n        this.ballMat.needsUpdate = true;\n      });\n      textureLoader.load('textures/planets/earth_specular_2048.jpg', (map) => {\n        map.anisotropy = 4;\n        map.colorSpace = THREE.SRGBColorSpace;\n        this.ballMat.metalnessMap = map;\n        this.ballMat.needsUpdate = true;\n      });\n\n      // 创建球体\n      const ballGeometry = new THREE.SphereGeometry(0.25, 32, 32);\n      const ballMesh = new THREE.Mesh(ballGeometry, this.ballMat);\n      ballMesh.position.set(1, 0.25, 1);\n      ballMesh.castShadow = true;\n      this.scene.add(ballMesh);\n    },\n\n    setupGUI() {\n      // GUI 参数\n      const params = {\n        shadows: true,\n        exposure: 0.68,\n        bulbPower: Object.keys(this.bulbLuminousPowers)[4],\n        hemiIrradiance: Object.keys(this.hemiLuminousIrradiances)[0]\n      };\n\n      // 灯泡流明值\n      this.bulbLuminousPowers = {\n        '110000 lm (1000W)': 110000,\n        '3500 lm (300W)': 3500,\n        '1700 lm (100W)': 1700,\n        '800 lm (60W)': 800,\n        '400 lm (40W)': 400,\n        '180 lm (25W)': 180,\n        '20 lm (4W)': 20,\n        'Off': 0\n      };\n\n      // 半球辐照度\n      this.hemiLuminousIrradiances = {\n        '0.0001 lx (Moonless Night)': 0.0001,\n        '0.002 lx (Night Airglow)': 0.002,\n        '0.5 lx (Full Moon)': 0.5,\n        '3.4 lx (City Twilight)': 3.4,\n        '50 lx (Living Room)': 50,\n        '100 lx (Very Overcast)': 100,\n        '350 lx (Office Room)': 350,\n        '400 lx (Sunrise/Sunset)': 400,\n        '1000 lx (Overcast)': 1000,\n        '18000 lx (Daylight)': 18000,\n        '50000 lx (Direct Sun)': 50000\n      };\n\n      // GUI 设置\n      const gui = new GUI();\n\n      gui.add(params, 'hemiIrradiance', Object.keys(this.hemiLuminousIrradiances)).onChange(value => {\n        this.hemiLight.intensity = this.hemiLuminousIrradiances[value];\n      });\n      gui.add(params, 'bulbPower', Object.keys(this.bulbLuminousPowers)).onChange(value => {\n        this.bulbLight.power = this.bulbLuminousPowers[value];\n        this.bulbMat.emissiveIntensity = this.bulbLight.intensity / Math.pow(0.02, 2.0); // 从强度转换到表面辐照度\n      });\n      gui.add(params, 'exposure', 0, 1).onChange(value => {\n        this.renderer.toneMappingExposure = Math.pow(value, 5.0); // 允许非常明亮的场景\n      });\n      gui.add(params, 'shadows').onChange(value => {\n        this.renderer.shadowMap.enabled = value;\n        this.bulbLight.castShadow = value;\n        this.updateMaterials();\n      });\n\n      // 更新材质以反应阴影变化\n      this.updateMaterials = () => {\n        this.ballMat.needsUpdate = true;\n        this.cubeMat.needsUpdate = true;\n        this.floorMat.needsUpdate = true;\n      };\n    },\n\n    animate() {\n      // Animation loop\n      requestAnimationFrame(this.animate);\n      this.render();\n    },\n\n    render() {\n      this.renderer.toneMappingExposure = Math.pow(this.params.exposure, 5.0); // 允许非常明亮的场景\n      this.renderer.shadowMap.enabled = this.params.shadows;\n      this.bulbLight.castShadow = this.params.shadows;\n\n      if (this.params.shadows !== this.previousShadowMap) {\n        // 更新材质以反映阴影的变化\n        this.ballMat.needsUpdate = true;\n        this.cubeMat.needsUpdate = true;\n        this.floorMat.needsUpdate = true;\n        this.previousShadowMap = this.params.shadows;\n      }\n\n      // 更新灯泡的功率和半球光源的强度\n      this.bulbLight.power = this.bulbLuminousPowers[this.params.bulbPower];\n      this.bulbMat.emissiveIntensity = this.bulbLight.intensity / Math.pow(0.02, 2.0); // 从强度转换到表面辐照度\n      this.hemiLight.intensity = this.hemiLuminousIrradiances[this.params.hemiIrradiance];\n\n      const time = Date.now() * 0.0005;\n      this.bulbLight.position.y = Math.cos(time) * 0.75 + 1.25;\n\n      this.renderer.render(this.scene, this.camera);\n\n      this.stats.update();\n    },\n\n    onWindowResize() {\n      this.camera.aspect = window.innerWidth / window.innerHeight;\n      this.camera.updateProjectionMatrix();\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n    },\n  }\n};\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}